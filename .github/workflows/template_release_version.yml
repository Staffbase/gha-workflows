name: Release Version Detector

on:
  workflow_call:
    inputs:
      format:
        required: false
        type: string
        default: 'weekly'
    outputs:
      new_version:
        value: ${{ jobs.new_version.outputs.new_version }}
      new_tag:
        value: ${{ jobs.new_version.outputs.new_tag }}

jobs:
  new_version:

    name: Get new release version
    runs-on: ubuntu-22.04

    outputs:
      new_version: ${{ steps.set_version.outputs.next_version }}
      new_tag: ${{ steps.set_version.outputs.next_tag }}

    steps:
      - name: Detect new release version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: set_version
        run: |
          DATE=$(date +"%Y%m%d")
          YEAR=$(date +"%Y")
          WEEK=$(date +"%-W")
          QUARTER=$(date "+%q")

          if [ ${{ inputs.format }} == 'quarterly' ] ; then
            MINOR=$QUARTER
          else
            MINOR=$WEEK
          fi

          if [[ $(gh release view -R ${{ github.repository }} 2>&1) =~ "release not found" ]]; then
            COUNTER=1
          else
            # fetch last tag from github
            OLD_VERSION=`gh api repos/${{ github.repository }}/releases/latest | jq .tag_name -r`
            PARTS=(${OLD_VERSION//./ })
            COUNTER=${PARTS[2]}
            MINOR_FROM_LAST_TAG=${PARTS[1]}

            # if we have a new week and the weekly release we start to count from 0
            if [ ${MINOR_FROM_LAST_TAG} != ${WEEK} ] && [ ${{ inputs.format }} == 'weekly' ]; then
              COUNTER=0
            fi

            # if we have a new quarter and the quarterly release we start to count from 0
            if [ ${MINOR_FROM_LAST_TAG} != ${QUARTER} ] && [ ${{ inputs.format }} == 'quarterly' ]; then
              COUNTER=0
            fi

            # check if valid tag
            pattern="v[0-9]+.[0-9]+.[0-9]+$"
            if ! [[ $OLD_VERSION =~ $pattern ]]; then
              COUNTER=0
            fi

            # increase Version
            COUNTER=$((COUNTER+1))
          fi

          echo "next_version=${YEAR}.${MINOR}.${COUNTER}" >> $GITHUB_OUTPUT
          echo "next_tag=v${YEAR}.${MINOR}.${COUNTER}" >> $GITHUB_OUTPUT
        shell: bash
